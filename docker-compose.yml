version: '3.8'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.0
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  shop:
    build:
      context: ./shop
    image: 35552425/shop
    ports:
      - "5003:5003"
    environment:
      - MONGODB_URL_DOCKER=mongodb://mongo_db:27017/shop
    container_name: shop
    volumes:
      - "./shop/src:/src"
    command: npm run dev
    
  orders:
    build:
      context: ./orders
    image: 35552425/orders
    ports:
      - "5004:5004"
    environment:
      - MONGODB_URL_DOCKER=mongodb://mongo_db:27017/orders
    container_name: orders
    volumes:
      - "./orders/src:/src"
    command: npm run dev

  streams_app:
    build:
      context: ./streams
    image: 35552425/orders
    ports:
      - "3000:3000"
    environment:
      - MONGODB_URL_DOCKER=mongodb://mongo_db:27017/predictions
    container_name: orders
    volumes:
      - "./streams:/app"
    # command: npm run dev

  front_end:
    build:
      context: ./front_end
    image: 35552425/front_end
    ports:
      - "5001:5001"
    container_name: front_end
    volumes:
      - "./front_end/src:/src"
      - "./front_end/public:/public"
    command: npm run dev

  users:
    build:
      context: ./users
    image: 35552425/users
    environment:
      - MONGODB_URL_DOCKER=mongodb://mongo_db:27017/users
    ports:
      - "5002:5002"
    container_name: users
    volumes:
      - "./users/src:/src"
    command: npm run dev
   
  mongo:
    image: mongo
    container_name: mongo_db
    command: mongod --quiet --logpath /dev/null
    ports:
      - "27000:27017"
    # restart: always

  nginx:
    image: nginx:alpine 
    container_name: nginx
    depends_on:
      - front_end
      - users
      - orders
    volumes:
      - "./reverse_proxy/nginx.conf:/etc/nginx/conf.d/default.conf"
    ports:
      - "5000:5000"

  ngrok:
    image: ngrok/ngrok:latest
    depends_on:
      - nginx
    ports:
      - 4040:4040
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
    environment:
      NGROK_CONFIG: '/etc/ngrok.yml'
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}